
<html>

<canvas id="gameCanvas" width="800" height="500"></canvas>
<script>
var canvas;
var canvasContext;
var ballX = 50;
var ballY = 50;
var ballSpeedX = 15;
var ballSpeedY = 4;
var paddle1Y = 250;
var paddle2Y = 250;
const PADDLE_HEIGHT = 100;
const PADDLE_THICKNESS = 10;
var player1score = 0;
var player2score = 0;
const WINNINGSCORE = 3;
var winningScreen =  false;
var StartScreen = true;
var Stoppage = false;
var Stoppage1 = false;



function resetBall4ever () {
	ballSpeedX = 0
	ballSpeedY = 0
	}

function handleMouseClick(evt) {
	if(winningScreen == true) {
		player1score = 0;
		player2score = 0;
		winningScreen = false;
	}
	if(StartScreen == true) {
		StartScreen = false;
		ballSpeedX = 15;
		ballSpeedY = 5;
	}
		if(Stoppage == true) {
		Stoppage = false;
		ballSpeedX = 15;
		ballSpeedY = 5;
	}
		if(Stoppage1 == true) {
		Stoppage1 = false;
		ballSpeedX = 15;
		ballSpeedY = 5;
	}


}

function calculateMousePos(evt)  {
	var rect = canvas.getBoundingClientRect();
	var root = document.documentElement;
	var mouseX = evt.clientX - rect.left - root.scrollLeft;
	var mouseY = evt.clientY - rect.top - root.scrollTop;
	return {
		x:mouseX,
		y:mouseY
	};
}


	window.onload = function() {
	var framesPerSecond = 30;
	canvas = document.getElementById('gameCanvas');
	canvasContext = canvas.getContext('2d');
	setInterval(function callBoth() {
		moveEverything();
		drawEverything();
		}, 1000/framesPerSecond );

	canvas.addEventListener('mousemove',
		function(evt) {
			var mousePos = calculateMousePos(evt);
			paddle1Y = mousePos.y-(PADDLE_HEIGHT/2);
		});

	canvas.addEventListener('mousedown',handleMouseClick);

}


function resetBall() {
	if (player1score >= WINNINGSCORE ||
	player2score >= WINNINGSCORE) {
		winningScreen = true;
	}

	ballX = canvas.width/2;
	ballY = canvas.height/2;
	ballSpeedX = -ballSpeedX
}

function computerMovement(){
	var paddle2YCenter = paddle2Y + (PADDLE_HEIGHT/2)
	if(paddle2YCenter < ballY-15) {
		paddle2Y += 6;
	} else if(paddle2YCenter > ballY+15) {
		paddle2Y -= 6;
	} 
}

function moveEverything() {
	if(winningScreen == true){
		return;
	}

	computerMovement();


	//this function is for the ball to bounce back and forth
	ballX += ballSpeedX;
	ballY -= ballSpeedY;
	if(ballX > canvas.width) {
		if(ballY > paddle2Y &&
		   ballY < paddle2Y+PADDLE_HEIGHT) {
			ballSpeedX = -ballSpeedX;
			var deltaY = ballY
				-(paddle2Y+PADDLE_HEIGHT/2);
			ballSpeedY = deltaY * 0.35;
			} else { 
			player1score++
			Stoppage1 = true;
		}
	}

	if(ballX < 0) {
		if(ballY > paddle1Y &&
		   ballY < paddle1Y+PADDLE_HEIGHT) {
			ballSpeedX = -ballSpeedX;			
			var deltaY = ballY
				-(paddle1Y+PADDLE_HEIGHT/2);
			ballSpeedY = deltaY * 0.35;
		} else {
		//make sure its this order 
		player2score = player2score + 1;
		Stoppage = true;
		}
	}

	if(ballY > canvas.height) {
		ballSpeedY = -ballSpeedY;
	}

	if(ballY < 0) {
		ballSpeedY = -ballSpeedY;
	}
}

function drawNet() {
	for(var i=0;i<canvas.height; i+=40) {
		colorRect(canvas.width/2-1,i,2,20, 'white');
	}
}

	function drawEverything() {
	//this function is to draw all the shapes needed
	colorRect(0,0,canvas.width,canvas.height,'black');

	if(winningScreen == true){
		canvasContext.fillStyle = 'white';
		if (player1score >= WINNINGSCORE) {
			canvasContext.fillText("Left player wins!",350,250);
		} else if (player2score >= WINNINGSCORE) {
			canvasContext.fillText("Right player wins!",350,250);
		}

		canvasContext.fillText("click to continue", 350,400);
		return;
	}

	if(StartScreen == true) {
		canvasContext.fillStyle = 'white';
		canvasContext.fillText("Click to start",350,250);
		canvasContext.fillText("First to 3 wins",350,100);
		resetBall();
		resetBall4ever();
		return;
	}


	




	drawNet();

	colorRect(0,paddle1Y,PADDLE_THICKNESS,PADDLE_HEIGHT,'white');
	colorRect(canvas.width-PADDLE_THICKNESS,paddle2Y,PADDLE_THICKNESS,PADDLE_HEIGHT,'white');
	colorCircle(ballX, ballY, 10, 'white');
	console.log("hello world");
	canvasContext.fillText(player1score, 100,100);
	canvasContext.fillText(player2score, canvas.width-100,100);
	
		if(Stoppage == true) {
		resetBall ();
		resetBall4ever();
		canvasContext.fillStyle = 'white';
		canvasContext.fillText("Right Player Scores!",350,100);
		canvasContext.fillText("Click to continue",350,400);
		return;
		}
		
		if(Stoppage1 == true) {
		resetBall ();
		resetBall4ever();
		canvasContext.fillStyle = 'white';
		canvasContext.fillText("Left Player Scores!",350,100);
		canvasContext.fillText("Click to continue",350,400);
		return;
		}

}

function colorCircle(centerX, centerY, radius, drawColor){
	canvasContext.fillStyle = drawColor;
	canvasContext.beginPath();
	canvasContext.arc(centerX, centerY, radius,0,Math.PI*2, true);
	canvasContext.fill();
}

function colorRect(leftX,topY, width,height, drawColor) {
	//this is to shorten the draw commands
	canvasContext.fillStyle = drawColor;
	canvasContext.fillRect	(leftX,topY,width,height);

}

		


</script>


</html>
